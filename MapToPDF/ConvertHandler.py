# Copyright 2017 The TensorFlow Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==============================================================================

"""
    Kubernetes
    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501
    The version of the OpenAPI document: release-1.16
    Generated by: https://openapi-generator.tech
"""
import sys,os
import multiprocessing
from docx2pdf import convert
from PyPDF2 import PdfFileMerger
from PIL import Image
from tkinter import messagebox

class ConvertHandler:
""" This class provides utility functions"""

   MESSAGEBOX_TITLE = "INFO"
   SUCCESS_MESSAGE = "All files have been compiled into a pdf - Philip"

   def __init__(self):
        """Deletes placeholder for input"""
        print_contents(self)
        path = self.contents.get()

        # and split into a list of lines:
        update_progressbar(10)
        files_to_pdf(self)
        update_progressbar(30)
        merge_files(self)
        update_progressbar(50)
        delete_files(self)
        update_progressbar(0))

   def files_to_pdf(self): 
        """Deletes placeholder for input"""
        try:
            FileConverter(self,path)
        except Exception as e:
            messagebox.showerror("Info", "Error" + str(e))
 
    def merge_files(self):
        """Deletes placeholder for input"""
        try:
            FileMerger(self,path)
        except Exception as e:
            messagebox.showerror("Info", "Error" + str(e))

    def delete_files(self):
        """Deletes placeholder for input"""
        try:
            DeleteHandler(self,path)
        except Exception as e:
            messagebox.showerror("Info", "Error" + str(e))

        update_progressbar(100)
        messagebox.showinfo(MESSAGEBOX_TITLE, SUCCESS_MESSAGE)
  
